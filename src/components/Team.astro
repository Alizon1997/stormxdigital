---
import Container from "./Container.astro"
import Topic from "./Topic.astro";
import teamData from './Data/team.json';
import Collapse from "./Collapse.astro";
import FounderSection from "./FounderSection.astro";
import ResponsiveTeamComponent from "./TeamCarousel";
import { getRelativeLocaleUrl } from 'astro:i18n';
import type { TranslationType } from './types/services';

// Ensure currentLocale is always 'en' or 'it'
const currentLocale = (Astro.currentLocale || 'it') as keyof typeof teamData;

// Import translations
import enTranslations from '../../public/locales/en/translation.json';
import itTranslations from '../../public/locales/it/translation.json';

const translations: TranslationType = currentLocale === 'en' ? enTranslations : itTranslations;
---

<Container>
<section id="about">
  <div class="relative flex flex-col items-center md:flex-row">
    <Topic title={translations.team.title} description={translations.team.description}/>
  </div>
</section>
  <FounderSection />

  <ResponsiveTeamComponent teamData={teamData} currentLocale={currentLocale} client:load />

  <div class="pt-20 relative flex flex-col items-center md:flex-row" id="about">
    <Topic title={translations.process.title} description={translations.process.description}/>
  </div>

  <div class="my-6 mx-2">
    <div class="space-y-10">
      {
        teamData[currentLocale].process.map((process, key) => (
          <Collapse label={process.label} index={key + 1}>
            {process.content}
          </Collapse>
        ))
      }
      <div class="group outline-none accordion-section" tabindex="1">
        <div class="group group-focus:bg-[#F95C04] group-focus:shadow-none shadow-card bg-gradient-to-r from-[#F95C04] via-7% to-[#FF8E0A] to-82% group-focus:rounded-b-none group-focus:rounded-t-3xl rounded-[60px] md:rounded-3xl  flex justify-between px-4 py-3 items-center transition-colors ease duration-500 cursor-pointer pr-10 relative">
          <div class="flex items-center group-focus:text-white px-10 pt-10 w-full transition ease duration-500">
            <div class="flex pb-10 gap-5 w-full items-center">
              <div class="flex justify-between w-full items-center rouded-full">
                <div class="flex items-center gap-5">
                  {
                    6 && (
                      <>
                        <p class="text-6xl font-medium text-white  flex items-center">
                          0{6}
                        </p>
                        <p class="lg:text-3xl text-lg text-white ">{translations.process.repeatProcess}</p>
                      </>
                    )
                  }
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Container>

<style>
  .accodion-chevron::after{
    content: "";
    @apply h-[70%] w-[8px] transform transition-transform bg-black absolute left-1/2 -translate-x-1/2;
  }
  .accodion-chevron::before{
    content: "";
    @apply h-[70%] w-[8px] rotate-90 transform bg-black absolute left-1/2 -translate-x-1/2;
  }
  .group:focus-within .accodion-chevron::after {
    @apply rotate-90;
  }
</style>