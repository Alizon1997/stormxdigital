---
// StormXBlogPanel.astro
import { FiEdit2, FiTrash2 } from 'react-icons/fi';
import { fetchPosts } from '../lib/fetchPosts';

const posts = await fetchPosts();
---

<div class="max-w-4xl mx-auto px-4 py-8">
    <h1 class="text-2xl font-bold mb-6">Blog Posts</h1>
    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Author</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Publish Date</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200" id="postsTableBody">
                {posts.map((post) => (
                    <tr id={`post-row-${post.$id}`}>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-gray-900">{post.title}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm text-gray-500">{post.author}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm text-gray-500">{new Date(post.publish_date).toLocaleDateString()}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <a href={`/admin/edit-post/${post.$id}`} class="text-indigo-600 hover:text-indigo-900 mr-3">
                                <FiEdit2 className="inline-block w-5 h-5" />
                            </a>
                            <button class="text-red-600 hover:text-red-900 delete-post-btn" data-post-id={post.$id}>
                                <FiTrash2 className="inline-block w-5 h-5" />
                            </button>
                        </td>
                    </tr>
                ))}
            </tbody>
        </table>
    </div>
    <div class="justify-end item-center flex">
        <button 
        class="mt-4 py-4 px-6 bg-black font-semibold text-white rounded-md hover:bg-orange" 
        onclick="window.location.href='/admin/post-editor'"
    >
        Create Post
        </button>
    </div>
</div>


<script>
    import { databases, DATABASE_ID, COLLECTION_ID } from '../lib/appwrite';

    async function deletePost(documentId: string) {
        if (confirm('Are you sure you want to delete this post?')) {
            try {
                await databases.deleteDocument(DATABASE_ID, COLLECTION_ID, documentId);
                console.log('Post deleted successfully');
                
                // Remove the deleted post from the UI
                const postRow = document.getElementById(`post-row-${documentId}`);
                if (postRow) {
                    postRow.remove();
                }

                // Show a success message
                alert('Post deleted successfully');
            } catch (error) {
                console.error('Error deleting post:', error);
                alert(`Failed to delete post. Error: ${error instanceof Error ? error.message : String(error)}`);
            }
        }
    }

    // Add event listeners to delete buttons
    document.addEventListener('DOMContentLoaded', () => {
        const deleteButtons = document.querySelectorAll('.delete-post-btn');
        deleteButtons.forEach(button => {
            button.addEventListener('click', (event: Event) => {
                const target = event.currentTarget as HTMLElement | null;
                if (target) {
                    const postId = target.getAttribute('data-post-id');
                    if (postId) {
                        deletePost(postId);
                    } else {
                        console.error('Post ID not found');
                    }
                } else {
                    console.error('Event target is null');
                }
            });
        });
    });
</script>