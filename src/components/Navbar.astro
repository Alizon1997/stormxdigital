---
import Container from "./Container.astro"
import LanguageSwitcher from './LanguageSwitcher';
import { getRelativeLocaleUrl } from 'astro:i18n';

interface Props {
  currentLocale: string;
}

// Get the current locale from the URL
const currentLocale = Astro.currentLocale || 'it';

// Import translations
import enTranslations from '../../public/locales/en/translation.json';
import itTranslations from '../../public/locales/it/translation.json';

const translations = currentLocale === 'en' ? enTranslations : itTranslations;

// Define a type for the navbar keys
type NavbarKey = keyof typeof translations.navbar;

// Define your navigation links here
const navLinks: { href: string; label: NavbarKey; isScroll?: boolean }[] = [
  { href: '/#method', label: 'services', isScroll: true },
  { href: '/mentorship', label: 'mentorship' },
  { href: '/#about', label: 'about' },
  { href: '/#contact', label: 'contact', isScroll: true },
  { href: '/blog', label: 'blog' },
];

const currentPath = Astro.url.pathname;
const isHomePage = currentPath === '/' || currentPath === `/${currentLocale}` || currentPath === `/${currentLocale}/`;

---

<header class="fixed top-0 left-0 w-full z-50 bg-white shadow-sm">
  <Container>
    <nav class="flex items-center justify-between py-4">
      <a href={getRelativeLocaleUrl(currentLocale, '')} class="flex-shrink-0">
        <img src="/StormXLogo.svg" class="h-8 sm:h-10 lg:h-12" alt="StormX Digital Logo" />
      </a>
      
      <button 
        id="menu-toggle"
        type="button"
        class="inline-flex items-center p-2 ml-3 text-sm rounded-lg lg:hidden focus:outline-none focus:ring-2 focus:ring-gray-200"
        aria-controls="navbar-default"
        aria-expanded="false"
      >
        <span class="sr-only">{translations.navbar.openMenu}</span>
        <svg class="w-6 h-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>

      <div id="navbar-default" class="hidden w-full lg:flex lg:w-auto lg:order-0">
        <ul class="flex flex-col p-4 mt-4 font-medium lg:flex-row lg:space-x-4 xl:space-x-8 lg:mt-0 lg:border-0 lg:p-0">
          {navLinks.map((link) => {
            let href: string;
            let isScrollLink = link.isScroll && isHomePage;

            if (link.label === 'contact' && !isHomePage) {
              href = `/${currentLocale}/#contact`;
              isScrollLink = false;
            } else if (link.href.startsWith('/#')) {
              href = `/${currentLocale}${link.href}`;
            } else if (link.href === '/mentorship' || link.href === '/blog') {
              href = getRelativeLocaleUrl(currentLocale, link.href);
            } else {
              href = getRelativeLocaleUrl(currentLocale, link.href);
            }

            return (
              <li>
                <a
                  href={href}
                  class={`block py-2 px-3 underline text-gray-900 rounded hover:bg-gray-100 lg:hover:bg-transparent lg:hover:text-blue-700 lg:p-0 ${isScrollLink ? 'scroll-link' : ''}`}
                  data-scroll={isScrollLink ? 'true' : 'false'}
                >
                  {translations.navbar[link.label]}
                </a>
              </li>
            );
          })}
          <li class="lg:hidden mt-4">
            <a
              href="https://cal.com/marcello-di-pierro/amazon-growth-session"
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex px-4 py-2 text-sm rounded-2xl bg-gradient-to-r from-[#FF8E0A] via-[#FF8E0A] to-[#F95C04] text-white hover:from-[#F95C04] hover:to-[#FF8E0A] transition duration-300 ease-in-out whitespace-nowrap justify-center w-full"
            >
              <span class="font-bold">{translations.navbar.bookMeeting}</span>
            </a>
          </li>
        </ul>
      </div>
      
      <a
        href="https://cal.com/marcello-di-pierro/amazon-growth-session"
        target="_blank"
        rel="noopener noreferrer"
        class="hidden lg:inline-flex px-4 py-2 text-sm xl:px-6 xl:py-2 xl:text-base rounded-2xl bg-gradient-to-r from-[#FF8E0A] via-[#FF8E0A] to-[#F95C04] text-white hover:from-[#F95C04] hover:to-[#FF8E0A] transition duration-300 ease-in-out whitespace-nowrap"
      >
        <span class="font-bold">{translations.navbar.bookMeeting}</span>
      </a>
      
      <LanguageSwitcher client:load />
    </nav>
  </Container>
</header>

<script>
  const menuToggle = document.getElementById('menu-toggle');
  const menu = document.getElementById('navbar-default');

  if (menuToggle && menu) {
    menuToggle.addEventListener('click', () => {
      menu.classList.toggle('hidden');
    });

    // Close menu when clicking outside
    document.addEventListener('click', (event: Event) => {
      const target = event.target as Node;
      if (menu && menuToggle && !menu.contains(target) && !menuToggle.contains(target)) {
        menu.classList.add('hidden');
      }
    });

    // Toggle menu visibility based on screen width
    const toggleMenuVisibility = () => {
      if (window.innerWidth >= 1024) {  // Using lg breakpoint
        menu.classList.remove('hidden');
      } else {
        menu.classList.add('hidden');
      }
    };

    // Initial check and event listener for resize
    toggleMenuVisibility();
    window.addEventListener('resize', toggleMenuVisibility);
  }

   // Smooth scrolling for navbar links
   document.querySelectorAll('.scroll-link').forEach((anchor: Element) => {
    anchor.addEventListener('click', (e: Event) => {
      e.preventDefault();

      const href = (anchor as HTMLAnchorElement).getAttribute('href');
      if (href) {
        const targetId = href.split('#')[1];
        const targetElement = document.getElementById(targetId);
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth'
          });
        }
      }
    });
  });
</script>

<style>
  @media (max-width: 1023px) {
    #navbar-default {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background-color: white;
      padding: 1rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    #navbar-default ul {
      width: 100%;
    }

    #navbar-default ul li {
      width: 100%;
      text-align: center;
    }

    #navbar-default ul li a {
      width: 100%;
      padding: 0.5rem;
    }
  }
</style>